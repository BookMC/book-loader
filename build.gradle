import club.chachy.repackage.MixinRepackage

//file:noinspection GroovyAssignabilityCheck
plugins {
    id "java"
    id "java-library"
    id "maven-publish"
    id "base"
    id "net.kyori.blossom" version "1.2.0"
}

ext {
    def env = System.getenv()
    local = !env.GITHUB_ACTIONS
    jdk = JavaVersion.current().getMajorVersion()
}

group "org.bookmc"
// We add the suffix for (our) non-lts support.
// Java 8 support will be removed in the future however.
version "0.7.5${local ? "-local" : ""}${JavaVersion.current() != JavaVersion.VERSION_1_8 ? "+jdk.$jdk" : ""}"

repositories {
    mavenCentral()
    maven {
        url "https://repo.spongepowered.org/repository/maven-public/"
    }
    maven {
        url "https://jitpack.io"
    }
}

def artifactType = Attribute.of("artifactType", String)
def repackaged = Attribute.of("repackaged", Boolean)

dependencies {
    attributesSchema {
        attribute(repackaged)
    }
    artifactTypes.getByName("jar") {
        attributes.attribute(repackaged, false)
    }
}

configurations.all {
    afterEvaluate {
        if (canBeResolved) {
            attributes.attribute(repackaged, true)
        }
    }
}

dependencies {
    registerTransform(MixinRepackage) {
        from.attribute(repackaged, false).attribute(artifactType, "jar")
        to.attribute(repackaged, true).attribute(artifactType, "jar")
    }
}

configurations {
    include
    implementation.extendsFrom(include)
}


dependencies {
    // Libraries to be downloaded via the installer
    api group: "org.apache.logging.log4j", name: "log4j-api", version: "2.0-beta9"
    api group: "org.apache.logging.log4j", name: "log4j-core", version: "2.0-beta9"

    // Directly in Minecraft
    compileOnly "com.google.code.gson:gson:2.2.4" // BookMC/minecraft#28

    // Shaded libraries
    include "org.spongepowered:mixin:0.8.3-SNAPSHOT"

    include "org.ow2.asm:asm:9.2"
    include "org.ow2.asm:asm-tree:9.2"
    include "org.ow2.asm:asm-commons:9.2"

    include "com.github.zafarkhaja:java-semver:0.9.0"
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
    withJavadocJar()
}

blossom {
    replaceToken("%LOADER_VERSION%", project.version)
}

jar {
    from {
        configurations.include.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    duplicatesStrategy DuplicatesStrategy.EXCLUDE
    exclude "module-info.class", "LICENSE.*", "META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA"
}

publishing {
    repositories {
        maven {
            def env = System.getenv()

            boolean isEnvVarsAvailable = env.containsKey("MAVEN_USER") && env.containsKey("MAVEN_PASSWORD")

            if (isEnvVarsAvailable) {
                credentials {
                    username env.get("MAVEN_USER")
                    password env.get("MAVEN_PASSWORD")
                }
            }

            url = local || !isEnvVarsAvailable ? "$buildDir/repository" : "https://maven.bookmc.org/releases/"
        }
    }

    publications {
        //noinspection GroovyAssignabilityCheck
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = "book-loader"
                url = "https://github.com/BookMC/loader"

                developers {
                    developer {
                        name = "ChachyDev"
                    }
                }
            }
        }
    }
}